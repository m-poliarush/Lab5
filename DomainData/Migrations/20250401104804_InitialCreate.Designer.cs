// <auto-generated />
using MenuManager.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MenuManager.Migrations
{
    [DbContext(typeof(MenuContext))]
    [Migration("20250401104804_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("MenuManager.DB.Models.BaseMenuItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DailyMenuDayID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrderID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("DailyMenuDayID");

                    b.HasIndex("OrderID");

                    b.ToTable("BaseMenuItem");

                    b.HasDiscriminator<string>("ItemType").HasValue("BaseMenuItem");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MenuManager.DB.Models.DailyMenu", b =>
                {
                    b.Property<int>("DayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DayID");

                    b.ToTable("DailyMenus");
                });

            modelBuilder.Entity("MenuManager.DB.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalCost")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MenuManager.DB.Models.ComplexDish", b =>
                {
                    b.HasBaseType("MenuManager.DB.Models.BaseMenuItem");

                    b.HasDiscriminator().HasValue("ComplexDish");
                });

            modelBuilder.Entity("MenuManager.DB.Models.Dish", b =>
                {
                    b.HasBaseType("MenuManager.DB.Models.BaseMenuItem");

                    b.Property<int?>("ComplexDishID")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ComplexDishID");

                    b.HasDiscriminator().HasValue("Dish");
                });

            modelBuilder.Entity("MenuManager.DB.Models.BaseMenuItem", b =>
                {
                    b.HasOne("MenuManager.DB.Models.DailyMenu", null)
                        .WithMany("Dishes")
                        .HasForeignKey("DailyMenuDayID");

                    b.HasOne("MenuManager.DB.Models.Order", null)
                        .WithMany("dishes")
                        .HasForeignKey("OrderID");
                });

            modelBuilder.Entity("MenuManager.DB.Models.Dish", b =>
                {
                    b.HasOne("MenuManager.DB.Models.ComplexDish", null)
                        .WithMany("DishList")
                        .HasForeignKey("ComplexDishID");
                });

            modelBuilder.Entity("MenuManager.DB.Models.DailyMenu", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("MenuManager.DB.Models.Order", b =>
                {
                    b.Navigation("dishes");
                });

            modelBuilder.Entity("MenuManager.DB.Models.ComplexDish", b =>
                {
                    b.Navigation("DishList");
                });
#pragma warning restore 612, 618
        }
    }
}
